server.port=8083
spring.application.name=Company Management Platform 

#server.context-path=/v1/api/
#spring.datasource.url=jdbc:mysql://localhost:3306/hibernateproject?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=password
#spring.datasource.tomcat.max-wait=20000
#spring.datasource.tomcat.max-active=50
#spring.datasource.tomcat.max-idle=20
#spring.datasource.tomcat.min-idle=15
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.id.new_generator_mappings = false
#spring.jpa.properties.hibernate.format_sql = true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
##spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
##spring.mvc.view.prefix: /WEB-INF/views/
##spring.mvc.view.suffix: .jsp
##spring.resources.static-locations=file:/var/www/static,classpath:static


# New
#
### Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:mysql://localhost:3306/hibernateproject?useSSL=false
#spring.datasource.username = root
#spring.datasource.password = password
#
#
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update


# ===============================
# DATABASE
# ===============================
#
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#
#spring.datasource.url=jdbc:mysql://localhost:3306/hibernateproject
#spring.datasource.username=root
#spring.datasource.password=password
#
#
#
## ===============================
## JPA / HIBERNATE
## ===============================
#
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
#


spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/hibernateproject?useSSL=false
spring.datasource.username = root
spring.datasource.password = password

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql = true

spring.jpa.hibernate.ddl-auto = update

#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect


# Add
#spring.datasource.tomcat.max-wait=20000
#spring.datasource.tomcat.max-active=50
#spring.datasource.tomcat.max-idle=20
#spring.datasource.tomcat.min-idle=15
#spring.jpa.properties.hibernate.id.new_generator_mappings = false
#spring.jpa.properties.hibernate.format_sql = true

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# add new


# Initialisation
#spring.datasource.schema=classpath:/data/hsqldb/schema.sql
#spring.datasource.data=classpath:/data/hsqldb/data.sql

# Actuator properties
info.app.name=Company discussion forum 
info.app.description=Company discussion forum project 
info.build.group=@project.groupId@
info.build.artifact=@project.artifactId@
info.build.version=@project.version@

management.context-path=/actuators
management.security.enabled=false

# Spring Security Configuration
#security.user.name=maxim
#security.user.password=12345

spring.datasource.tomcat.testWhileIdle = true
spring.datasource.tomcat.timeBetweenEvictionRunsMillis = 60000
spring.datasource.tomcat.validationQuery = SELECT 1


logging.level.=error

#spring.jpa.open-in-view=true

#For detailed logging during development
logging.level.org.springframework=TRACE
logging.level.com=TRACE
logging.level.org.springframework.web: DEBUG
logging.level.org.hibernate: ERROR


#spring.datasource.driver-class-name:com.mysql.jdbc.Driver
#
#spring.datasource.maxActive=2
#
#
#
#
#hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#
#
#
#spring.datasource.classname=com.mysql.jdbc.Driver


#
#hibernate.hbm2ddl.auto=update
#
#hibernate.globally_quoted_identifiers=true





# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Cache config
spring.cache.ehcache.config=classpath:ehcache.xml


# Messaging queue config
amqp.queue.name=values-queue
amqp.exchange.name=values-exchange


# REDIS (RedisProperties)
#spring.redis.database=aaa # Database index used by the connection factory.

#spring.redis.password= # Login password of the redis server.
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
#spring.redis.timeout=0 # Connection timeout in milliseconds.
spring.redis.host=localhost 
spring.redis.port=6379


redis.host=localhost
redis.port=6379

# Redis Config
spring.cache.type=redis

# REDIS (RedisProperties)


#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1
#spring.redis.pool.max-idle=8
#spring.redis.pool.min-idle=0
#spring.redis.timeout=0
#
#
## Elasticsearch config
#spring.data.elasticsearch.cluster-nodes=localhost:9200
#
## if spring data repository support is enabled
#
#spring.data.elasticsearch.repositories.enabled=true
#
#elasticsearch.clustername = hibernate
#elasticsearch.host = localhost
#elasticsearch.port = 9200

#
# Home directory of the embedded Elasticsearch instance. Default to the
# current working directory.
#
#spring.data.elasticsearch.properties.path.home=target/elastic-embedded
#spring.data.elasticsearch.properties.transport.tcp.connect_timeout=60s
#spring.data.elasticsearch.local=false
#spring.data.elasticsearch.properties.transport.tcp.connect_timeout=60s





#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=false


# Spring batch config
spring.batch.initialize-schema=never



spring.datasource.driver-class-name=com.mysql.jdbc.Driver